# This workflow will do a clean installation of node dependencies, cache/restore them,
# build the source code, and run tests across different versions of node.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: ['20.x']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Dependencies
      run: npm install

    # Step to create or update the .env file with secrets
    - name: Create or Update .env File
      run: |
        if [ ! -f .env ]; then
          touch .env
        fi
        echo "CONNECTION_STRING=${{ secrets.CONNECTION_STRING }}" >> .env
        echo "GOOGLE_DECODE_TOKEN_API=${{ secrets.GOOGLE_DECODE_TOKEN_API }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "USER_SECRET_KEY=${{ secrets.USER_SECRET_KEY }}" >> .env
        echo "STUDENT_SECRET_KEY=${{ secrets.STUDENT_SECRET_KEY }}" >> .env
        echo "ADMIN_SECRET_KEY=${{ secrets.ADMIN_SECRET_KEY }}" >> .env
        echo "LOCAL_ORIGIN=${{ secrets.LOCAL_ORIGIN }}" >> .env
        echo "PRODUCTION_ORIGIN=${{ secrets.PRODUCTION_ORIGIN }}" >> .env
      shell: bash

    - name: Build Project
      run: npm run build --if-present

    - name: Check if PM2 Process at Index 0 is Running
      run: |
        if pm2 describe 0 > /dev/null; then
          echo "PM2 process at index 0 is running, restarting it..."
          pm2 restart 0
        else
          echo "No PM2 process at index 0, starting a new one..."
          pm2 start dist/index.js --name "Support-System-Backend"
        fi
